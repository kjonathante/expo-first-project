{"version":3,"sources":["/Users/kitjonathante/workspace/React-Native/first-project/PickImage.js","/Users/kitjonathante/workspace/React-Native/first-project/App.js","/Users/kitjonathante/workspace/React-Native/first-project/web-build/register-service-worker.js"],"names":["ImagePickerExample","state","image","getPermissionAsync","a","async","Constants","platform","ios","Permissions","status","alert","_pickImage","ImagePicker","mediaTypes","All","allowsEditing","aspect","quality","result","console","log","cancelled","setState","uri","this","View","style","flex","alignItems","justifyContent","Button","title","onPress","Image","source","width","height","React","App","styles","container","Text","fontSize","StyleSheet","create","backgroundColor","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"wRAMqBA,E,mLACnBC,MAAQ,CACNC,MAAO,M,EAwBTC,mBAAqB,0BAAAC,EAAAC,OAAA,oDACfC,IAAUC,SAASC,IADJ,kCAAAJ,EAAA,MAEQK,IAAqBA,MAF7B,gBAGF,YAHE,EAETC,QAENC,MAAM,6DAJS,sC,EASrBC,WAAa,0BAAAR,EAAAC,OAAA,kEAAAD,EAAA,MACQS,IAAoC,CACrDC,WAAYD,IAA6BE,IACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KALA,OACPC,EADO,OAQXC,QAAQC,IAAIF,GAEPA,EAAOG,WACV,EAAKC,SAAS,CAAErB,MAAOiB,EAAOK,MAXrB,sC,wDA9BH,IACFtB,EAAUuB,KAAKxB,MAAfC,MAEN,OACE,gBAACwB,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,WAAY,SAAUC,eAAgB,WAC5D,gBAACC,EAAA,EAAD,CACEC,MAAM,iCACNC,QAASR,KAAKb,aAEfV,GACC,gBAACgC,EAAA,EAAD,CAAOC,OAAQ,CAAEX,IAAKtB,GAASyB,MAAO,CAAES,MAAO,IAAKC,OAAQ,U,0CAOlEZ,KAAKtB,qBACLiB,QAAQC,IAAI,U,GAvBgCiB,aCFjC,SAASC,IAEtB,OADAnB,QAAQC,IAAImB,GAEV,kBAACd,EAAA,EAAD,CAAMC,MAAOa,EAAOC,WAClB,kBAACC,EAAA,EAAD,CAAMf,MAAO,CAACgB,SAAU,KAAxB,gDACA,kBAAC,EAAD,OATN,kCAcA,IAAMH,EAASI,IAAWC,OAAO,CAC/BJ,UAAW,CACTb,KAAM,EACNkB,gBAAiB,OACjBjB,WAAY,SACZC,eAAgB,a,4DCjBhB,kBAAmBiB,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdpC,QAAQkC,KAAK,oCAAqCE,W","file":"static/js/app.120e7844.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Button, Image, View } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\n\nexport default class ImagePickerExample extends React.Component {\n  state = {\n    image: null\n  };\n\n  render() {\n    let { image } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Button\n          title=\"Pick an image from camera roll\"\n          onPress={this._pickImage}\n        />\n        {image && (\n          <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\n        )}\n      </View>\n    );\n  }\n\n  componentDidMount() {\n    this.getPermissionAsync();\n    console.log(\"hi\");\n  }\n\n  getPermissionAsync = async () => {\n    if (Constants.platform.ios) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  _pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      this.setState({ image: result.uri });\n    }\n  };\n}\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport PickImage from './PickImage';\n\nexport default function App() {\n  console.log(styles);\n  return (\n    <View style={styles.container}>\n      <Text style={{fontSize: 50}}>Open up App.js to start working on your app!</Text>\n      <PickImage />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}